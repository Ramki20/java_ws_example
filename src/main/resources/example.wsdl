<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://web.service.eas.citso.fsa.usda.gov" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" name="AuthorizationSharedService" targetNamespace="http://web.service.eas.citso.fsa.usda.gov">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://web.service.eas.citso.fsa.usda.gov" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://web.service.eas.citso.fsa.usda.gov" version="1.0">
  <xs:element name="FindMatchingUserIdentityRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" maxOccurs="unbounded" name="MapEntry" type="tns:MapEntry"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindMatchingUserIdentityResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="UserIdentity" type="tns:UserIdentity"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindOfficesByEauthIdRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="UsdaEauthId" type="xs:string"/>
        <xs:element form="qualified" maxOccurs="unbounded" name="OfficeType" type="tns:officeType"/>
        <xs:element form="qualified" name="RequestToken" type="tns:requestToken"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindOfficesByEauthIdResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="Offices" type="tns:ListType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindUserCriteriaResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="Users" type="tns:ListType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindUsersByCriteriaRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="OfficeId" type="xs:string"/>
        <xs:element form="qualified" name="RoleName" type="xs:string"/>
        <xs:element form="qualified" name="RequestToken" type="tns:requestToken"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindUsersByOfficeIdRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="OfficeId" type="xs:string"/>
        <xs:element form="qualified" name="RequestToken" type="tns:requestToken"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindUsersByOfficeIdResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="users" type="tns:ListType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindUsersByRoleRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="RoleName" type="xs:string"/>
        <xs:element form="qualified" name="RequestToken" type="tns:requestToken"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FindUsersByRoleResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="Users" type="tns:ListType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetListAttributeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="ListValues" type="tns:ListType"/>
        <xs:element form="qualified" name="AttributeName" type="xs:string"/>
        <xs:element form="qualified" minOccurs="0" name="UserIdentity" type="tns:UserIdentity"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetMapAttributeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="MapValues" type="tns:MapType"/>
        <xs:element form="qualified" name="AttributeName" type="xs:string"/>
        <xs:element form="qualified" minOccurs="0" name="UserIdentity" type="tns:UserIdentity"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetSimpleAttributeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="StringValue" type="xs:string"/>
        <xs:element form="qualified" name="AttributeName" type="xs:string"/>
        <xs:element form="qualified" minOccurs="0" name="UserIdentity" type="tns:UserIdentity"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetUserIdentifyingPropertiesRequest">
    <xs:complexType>
      <xs:sequence/>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetUserIdentifyingPropertiesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="MapValues" type="tns:MapType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetUserRolesRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="UserIdentity" type="tns:UserIdentity"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetUserRolesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element form="qualified" name="UserRoles" type="tns:ListType"/>
        <xs:element form="qualified" minOccurs="0" name="UserIdentity" type="tns:UserIdentity"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="findMatchingUserIdentity" type="tns:findMatchingUserIdentity"/>
  <xs:element name="findMatchingUserIdentityResponse" type="tns:findMatchingUserIdentityResponse"/>
  <xs:element name="findOfficesByEauthId" type="tns:findOfficesByEauthId"/>
  <xs:element name="findOfficesByEauthIdResponse" type="tns:findOfficesByEauthIdResponse"/>
  <xs:element name="findUsersByCriteria" type="tns:findUsersByCriteria"/>
  <xs:element name="findUsersByCriteriaResponse" type="tns:findUsersByCriteriaResponse"/>
  <xs:element name="findUsersByOfficeId" type="tns:findUsersByOfficeId"/>
  <xs:element name="findUsersByOfficeIdResponse" type="tns:findUsersByOfficeIdResponse"/>
  <xs:element name="findUsersByRole" type="tns:findUsersByRole"/>
  <xs:element name="findUsersByRoleResponse" type="tns:findUsersByRoleResponse"/>
  <xs:element name="getListAttribute" type="tns:getListAttribute"/>
  <xs:element name="getListAttributeResponse" type="tns:getListAttributeResponse"/>
  <xs:element name="getMapAttribute" type="tns:getMapAttribute"/>
  <xs:element name="getMapAttributeResponse" type="tns:getMapAttributeResponse"/>
  <xs:element name="getSimpleAttribute" type="tns:getSimpleAttribute"/>
  <xs:element name="getSimpleAttributeResponse" type="tns:getSimpleAttributeResponse"/>
  <xs:element name="getUserIdentifyingProperties" type="tns:getUserIdentifyingProperties"/>
  <xs:element name="getUserIdentifyingPropertiesResponse" type="tns:getUserIdentifyingPropertiesResponse"/>
  <xs:element name="getUserRoles" type="tns:getUserRoles"/>
  <xs:element name="getUserRolesResponse" type="tns:getUserRolesResponse"/>
  <xs:element name="isHealthy" type="tns:isHealthy"/>
  <xs:element name="isHealthyResponse" type="tns:isHealthyResponse"/>
  <xs:complexType name="findMatchingUserIdentity">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MapEntry">
    <xs:sequence>
      <xs:element form="qualified" name="Key" type="xs:string"/>
      <xs:element form="qualified" name="Value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findMatchingUserIdentityResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserIdentity">
    <xs:sequence>
      <xs:element name="AuthenticationSystemIdentifier" type="xs:string"/>
      <xs:element name="AuthorizationSystemIdentifier" type="xs:string"/>
      <xs:element name="UserLoginName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsersByRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestToken">
    <xs:sequence>
      <xs:element minOccurs="0" name="applicationIdentifier" type="xs:string"/>
      <xs:element minOccurs="0" name="requestHost" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsersByRoleResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListType">
    <xs:sequence>
      <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ListValue" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getListAttribute">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="tns:AttributeRequest"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AttributeRequest">
    <xs:sequence>
      <xs:element form="qualified" name="UserIdentity" type="tns:UserIdentity"/>
      <xs:element form="qualified" name="AttributeName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getListAttributeResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUserRoles">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUserRolesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findOfficesByEauthId">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findOfficesByEauthIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSimpleAttribute">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="tns:AttributeRequest"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSimpleAttributeResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isHealthy">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="isHealthyResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getMapAttribute">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="tns:AttributeRequest"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getMapAttributeResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MapType">
    <xs:sequence>
      <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="MapValue" type="tns:MapEntry"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUserIdentifyingProperties">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUserIdentifyingPropertiesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsersByCriteria">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsersByCriteriaResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsersByOfficeId">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsersByOfficeIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="officeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FSA"/>
      <xs:enumeration value="FLP"/>
      <xs:enumeration value="FLPFinance"/>
      <xs:enumeration value="FLPJurisdiction"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="AuthorizationServiceValidationException" type="tns:AuthorizationServiceValidationException"/>
  <xs:complexType name="AuthorizationServiceValidationException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getListAttribute">
    <wsdl:part element="tns:getListAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesResponse">
    <wsdl:part element="tns:getUserRolesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMapAttributeResponse">
    <wsdl:part element="tns:getMapAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRoles">
    <wsdl:part element="tns:getUserRoles" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSimpleAttribute">
    <wsdl:part element="tns:getSimpleAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isHealthy">
    <wsdl:part element="tns:isHealthy" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMapAttribute">
    <wsdl:part element="tns:getMapAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserIdentifyingPropertiesResponse">
    <wsdl:part element="tns:getUserIdentifyingPropertiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findOfficesByEauthIdResponse">
    <wsdl:part element="tns:findOfficesByEauthIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserIdentifyingProperties">
    <wsdl:part element="tns:getUserIdentifyingProperties" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMatchingUserIdentityResponse">
    <wsdl:part element="tns:findMatchingUserIdentityResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsersByOfficeId">
    <wsdl:part element="tns:findUsersByOfficeId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMatchingUserIdentity">
    <wsdl:part element="tns:findMatchingUserIdentity" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsersByRole">
    <wsdl:part element="tns:findUsersByRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizationServiceValidationException">
    <wsdl:part element="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findOfficesByEauthId">
    <wsdl:part element="tns:findOfficesByEauthId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsersByRoleResponse">
    <wsdl:part element="tns:findUsersByRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsersByCriteriaResponse">
    <wsdl:part element="tns:findUsersByCriteriaResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSimpleAttributeResponse">
    <wsdl:part element="tns:getSimpleAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isHealthyResponse">
    <wsdl:part element="tns:isHealthyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsersByCriteria">
    <wsdl:part element="tns:findUsersByCriteria" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsersByOfficeIdResponse">
    <wsdl:part element="tns:findUsersByOfficeIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getListAttributeResponse">
    <wsdl:part element="tns:getListAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="AuthorizationSharedService">
    <wsdl:operation name="findMatchingUserIdentity">
      <wsdl:input message="tns:findMatchingUserIdentity" name="findMatchingUserIdentity">
    </wsdl:input>
      <wsdl:output message="tns:findMatchingUserIdentityResponse" name="findMatchingUserIdentityResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsersByRole">
      <wsdl:input message="tns:findUsersByRole" name="findUsersByRole">
    </wsdl:input>
      <wsdl:output message="tns:findUsersByRoleResponse" name="findUsersByRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListAttribute">
      <wsdl:input message="tns:getListAttribute" name="getListAttribute">
    </wsdl:input>
      <wsdl:output message="tns:getListAttributeResponse" name="getListAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <wsdl:input message="tns:getUserRoles" name="getUserRoles">
    </wsdl:input>
      <wsdl:output message="tns:getUserRolesResponse" name="getUserRolesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findOfficesByEauthId">
      <wsdl:input message="tns:findOfficesByEauthId" name="findOfficesByEauthId">
    </wsdl:input>
      <wsdl:output message="tns:findOfficesByEauthIdResponse" name="findOfficesByEauthIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSimpleAttribute">
      <wsdl:input message="tns:getSimpleAttribute" name="getSimpleAttribute">
    </wsdl:input>
      <wsdl:output message="tns:getSimpleAttributeResponse" name="getSimpleAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isHealthy">
      <wsdl:input message="tns:isHealthy" name="isHealthy">
    </wsdl:input>
      <wsdl:output message="tns:isHealthyResponse" name="isHealthyResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMapAttribute">
      <wsdl:input message="tns:getMapAttribute" name="getMapAttribute">
    </wsdl:input>
      <wsdl:output message="tns:getMapAttributeResponse" name="getMapAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentifyingProperties">
      <wsdl:input message="tns:getUserIdentifyingProperties" name="getUserIdentifyingProperties">
    </wsdl:input>
      <wsdl:output message="tns:getUserIdentifyingPropertiesResponse" name="getUserIdentifyingPropertiesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsersByCriteria">
      <wsdl:input message="tns:findUsersByCriteria" name="findUsersByCriteria">
    </wsdl:input>
      <wsdl:output message="tns:findUsersByCriteriaResponse" name="findUsersByCriteriaResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsersByOfficeId">
      <wsdl:input message="tns:findUsersByOfficeId" name="findUsersByOfficeId">
    </wsdl:input>
      <wsdl:output message="tns:findUsersByOfficeIdResponse" name="findUsersByOfficeIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:AuthorizationServiceValidationException" name="AuthorizationServiceValidationException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AuthorizationSharedServiceSoapBinding" type="tns:AuthorizationSharedService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findMatchingUserIdentity">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findMatchingUserIdentity">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findMatchingUserIdentityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsersByRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findUsersByRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findUsersByRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getListAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getListAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserRoles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserRolesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findOfficesByEauthId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findOfficesByEauthId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findOfficesByEauthIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSimpleAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSimpleAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSimpleAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isHealthy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isHealthy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isHealthyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMapAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getMapAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMapAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentifyingProperties">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserIdentifyingProperties">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserIdentifyingPropertiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsersByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findUsersByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findUsersByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsersByOfficeId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findUsersByOfficeId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findUsersByOfficeIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthorizationServiceValidationException">
        <soap:fault name="AuthorizationServiceValidationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AuthorizationSharedService">
    <wsdl:port binding="tns:AuthorizationSharedServiceSoapBinding" name="AuthorizationServicePort">
      <soap:address location="http://10.29.60.95:8080/easws/sharedservice/AuthorizationSharedService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>